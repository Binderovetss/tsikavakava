from flask import Flask, request, jsonify
from flask_cors import CORS  # –ü–æ–¥–∫–ª—é—á–∞–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É CORS
import requests
import time

app = Flask(__name__)
CORS(app)  # –†–∞–∑—Ä–µ—à–∞–µ–º CORS –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤

TELEGRAM_BOT_TOKEN = "7368319072:AAEqEa3DWGdgA0HsqrfcTlSJaPYeCGCj52A"
CHAT_ID = "294154587"

redirects = {}  # –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤

@app.route('/send-to-telegram', methods=['POST', 'OPTIONS'])
def send_to_telegram():
    """–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ö –≤ Telegram"""
    if request.method == "OPTIONS":
        return _build_cors_preflight_response()  # –†–∞–∑—Ä–µ—à–∞–µ–º CORS preflight

    data = request.json
    user_id = int(time.time())
    choice = data.get("choice", "")

    keyboard = {
        "inline_keyboard": [
            [{"text": "–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –∑–µ–ª—ë–Ω—É—é", "callback_data": f"{user_id}:green"}],
            [{"text": "–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –∫—Ä–∞—Å–Ω—É—é", "callback_data": f"{user_id}:red"}]
        ]
    }

    telegram_url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {
        "chat_id": CHAT_ID,
        "text": f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª: {choice}",
        "reply_markup": keyboard
    }

    response = requests.post(telegram_url, json=payload)
    print(f"üì© –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram: {response.status_code}, {response.text}")

    for _ in range(30):
        if user_id in redirects:
            return jsonify({"redirect_url": redirects.pop(user_id)})
        time.sleep(2)

    return jsonify({"message": "–û–ø–µ—Ä–∞—Ç–æ—Ä –µ—â—ë –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."})

@app.route('/telegram-callback', methods=['POST'])
def telegram_callback():
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Å—ã–ª–∫—É –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞"""
    data = request.json
    print(f"üì© –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç Telegram: {data}")  # –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ

    if "callback_query" not in data:
        print("üö® –û—à–∏–±–∫–∞: –≤ –∑–∞–ø—Ä–æ—Å–µ –Ω–µ—Ç 'callback_query'!")
        return jsonify({"error": "Invalid request format"}), 400

    callback_data = data["callback_query"].get("data")
    if not callback_data:
        print("üö® –û—à–∏–±–∫–∞: –≤ callback_query –Ω–µ—Ç 'data'!")
        return jsonify({"error": "Missing 'data' in callback_query"}), 400

    user_id, color = callback_data.split(":")

    redirect_url = "http://127.0.0.1:8000/green.html" if color == "green" else "http://127.0.0.1:8000/red.html"
    redirects[int(user_id)] = redirect_url

    print(f"‚úÖ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –Ω–∞ {redirect_url}")

    telegram_url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/answerCallbackQuery"
    requests.post(telegram_url, json={"callback_query_id": data["callback_query"]["id"], "text": "–°—Å—ã–ª–∫–∞ –≤—ã–±—Ä–∞–Ω–∞!"})

    return jsonify({"status": "success"})

def _build_cors_preflight_response():
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç CORS preflight-–∑–∞–ø—Ä–æ—Å"""
    response = jsonify({"message": "CORS OK"})
    response.headers.add("Access-Control-Allow-Origin", "*")
    response.headers.add("Access-Control-Allow-Methods", "POST, OPTIONS")
    response.headers.add("Access-Control-Allow-Headers", "Content-Type")
    return response

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000, debug=True)